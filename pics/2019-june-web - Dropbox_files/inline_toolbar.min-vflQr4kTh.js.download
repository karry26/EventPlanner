define(["require","exports","tslib","spectrum_comments/comment_editor/core/class_decorators","spectrum_comments/folder_overview_editor/layers/scaffold","spectrum_comments/comment_editor/core/types"],function(e,t,o,r,n,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=(function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o.__extends(t,e),t.prototype.onDraftChange=function(e){var t=e.innerProps.evt;this.updateToolbarOnEditorStateChanges(t,e.triggers.inlineToolbar.updateProps),this.hidePlaceholderWhenContentEmpty(t,e.triggers.globalStyle.setClassName)},t.prototype.updateVisibility=function(e){return e.innerProps.evt},t.prototype.updateToolbarOnEditorStateChanges=function(e,t){var o=e.getSelection(),r=e.getCurrentContent().getBlockForKey(o.getStartKey()),n=r&&""==r.getText(),i="task-block"===r.getType();t({isVisible:o.getHasFocus()&&o.isCollapsed()&&n,showOnlyMention:i})},t.prototype.hidePlaceholderWhenContentEmpty=function(e,t){t({className:"hide-placeholder",value:e.getSelection().getHasFocus()})},o.__decorate([r.plug(n.intoFolderOverview.draft.on.change)],t.prototype,"onDraftChange",null),o.__decorate([r.plug(n.intoFolderOverview.inlineToolbar.on.updateProps.update.props)],t.prototype,"updateVisibility",null),t})(i.BaseLayer);t.InlineToolbarLayer=a});
//# sourceMappingURL=inline_toolbar.min.js-vfltvakmw.map